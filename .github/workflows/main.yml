name: Test with Sonar
on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          pip install -r cancel_sales/requirements.txt
          pip install -r change_status_category_or_product/requirements.txt
          pip install -r get_category/requirements.txt
          pip install -r get_one_product/requirements.txt
          pip install -r get_products/requirements.txt
          pip install -r login/requirements.txt
          pip install -r newPassword/requirements.txt
          pip install -r save_category/requirements.txt
          pip install -r save_sale/requirements.txt
          pip install -r update_product/requirements.txt
          pip install -r view_sales_history_per_day/requirements.txt
          pip install -r test/requirements.txt

      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=$(pwd)/cancel_sales:$(pwd)/change_status_category_or_product:$(pwd)/get_category:$(pwd)/get_one_product:$(pwd)/get_products:$(pwd)/login:$(pwd)/newPassword:$(pwd)/save_category:$(pwd)/save_sale:$(pwd)/update_product:$(pwd)/view_sales_history_per_day" >> $GITHUB_ENV

      - name: Print Current Directory
        run: |
          echo "Current directory:"
          pwd
          echo

      - name: List Current Directory
        run: |
          echo "Contents of current directory:"
          ls -l
          echo

      - name: List Parent Directory
        run: |
          echo "Contents of parent directory:"
          ls -l $(dirname $(pwd))
          echo

      - name: List Root Directory
        run: |
          echo "Contents of root directory:"
          ls -l /
          echo

      - name: Print PYTHONPATH
        run: |
          echo "PYTHONPATH: $PYTHONPATH"
          echo

      - name: Run tests and generate coverage for cancel_sales
        run: |
          pytest test/unit/test_app_cancel_sales.py --cov=cancel_sales/app.py --cov-report=xml --cov-report=term

      - name: Run tests and generate coverage for change_status_category_or_product
        run: |
          pytest test/unit/test_app_change_status_category_or_product.py --cov=change_status_category_or_product/app.py --cov-report=xml --cov-report=term

      - name: Run tests and generate coverage for get_category
        run: |
          pytest test/unit/test_app_get_category.py --cov=get_category/app.py --cov-report=xml --cov-report=term

      - name: Run tests and generate coverage for get_one_product
        run: |
          pytest test/unit/test_get_one_product.py --cov=get_one_product/app.py --cov-report=xml --cov-report=term

      - name: Run tests and generate coverage for get_products
        run: |
          pytest test/unit/test_app_get_products.py --cov=get_products/app.py --cov-report=xml --cov-report=term

      - name: Run tests and generate coverage for login
        run: |
          pytest test/unit/test_app_login.py --cov=login/app.py --cov-report=xml --cov-report=term

      - name: Run tests and generate coverage for newPassword
        run: |
          pytest test/unit/test_app_reset_password.py --cov=newPassword/app.py --cov-report=xml --cov-report=term

      - name: Run tests and generate coverage for save_category
        run: |
          pytest test/unit/test_app_save_category.py --cov=save_category/app.py --cov-report=xml --cov-report=term

      - name: Run tests and generate coverage for save_sale
        run: |
          pytest test/unit/test_app_save_sale.py --cov=save_sale/app.py --cov-report=xml --cov-report=term

      - name: Run tests and generate coverage for update_product
        run: |
          pytest test/unit/test_app_update_product.py --cov=update_product/app.py --cov-report=xml --cov-report=term

      - name: Run tests and generate coverage for view_sales_history_per_day
        run: |
          pytest test/unit/test_app_view_sales_history_per_day.py --cov=view_sales_history_per_day/app.py --cov-report=xml --cov-report=term

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
